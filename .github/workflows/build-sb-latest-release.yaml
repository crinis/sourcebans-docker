name: build-sb-latest-release

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - "master"

jobs:
  get-sb-tag:
    runs-on: ubuntu-24.04
    outputs:
      sb-tag: ${{ steps.get-sb-tag.outputs.sb-tag }}
    steps:
      - name: Get latest Sourcebans release
        id: get-sb-tag
        run: |
          echo "sb-tag=$(curl https://api.github.com/repos/sbpp/sourcebans-pp/releases -s | jq -r ".[].tag_name" | grep '^1\.7\.[0-9]*$' -m1)" >> $GITHUB_OUTPUT
  
  build-amd64:
    runs-on: ubuntu-24.04
    needs: get-sb-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          SB_TAG: ${{ needs.get-sb-tag.outputs.sb-tag }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-${{ env.SB_TAG }}-amd64, ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-latest-amd64, ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-${{ github.run_id }}-amd64
          build-args: |
            CHECKOUT=${{ env.SB_TAG }}

  build-arm64:
    runs-on: ubuntu-24.04-arm
    needs: get-sb-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          SB_TAG: ${{ needs.get-sb-tag.outputs.sb-tag }}
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-${{ env.SB_TAG }}-arm64, ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-latest-arm64, ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-${{ github.run_id }}-arm64
          build-args: |
            CHECKOUT=${{ env.SB_TAG }}

  create-manifests:
    runs-on: ubuntu-latest
    needs: [get-sb-tag, build-amd64, build-arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Create manifest for sb-{tag} and push
        env:
          SB_TAG: ${{ needs.get-sb-tag.outputs.sb-tag }}
        run: |
          docker buildx imagetools create \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-${{ env.SB_TAG }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-${{ env.SB_TAG }}-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-${{ env.SB_TAG }}-arm64

      - name: Create latest manifest and push
        run: |
          docker buildx imagetools create \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-latest \
            ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-latest-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/sourcebans:sb-latest-arm64

      - name: Create manifest for run ID and push
        run: |
          docker buildx imagetools create \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:sb-${{ github.run_id }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:sb-${{ github.run_id }}-amd64 \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:sb-${{ github.run_id }}-arm64
